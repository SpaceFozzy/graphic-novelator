import os

def generate_index_html(total_chunks):
    title = os.getenv("TITLE", "Unknown Story")
    author = os.getenv("AUTHOR", "Unknown Author")
    return f"""
    <html>
    <!-- Generated by graphic-novelator: https://github.com/SpaceFozzy/graphic-novelator -->
    <head><title>{title}</title></head>
    <body>
        <h1>{title}</h1>
        <p>By {author}</p>
        <p>Built with <a href='https://github.com/SpaceFozzy/graphic-novelator'>graphic-novelator</a></p>
        <ul>
            {"".join(f"<li><a href='pages/{i + 1}.html'>Scene {i + 1}</a></li>" for i in range(total_chunks))}
        </ul>
    </body>
    </html>
    """

def generate_chunks_html(chunks):
    total_chunks = len(chunks)
    html_pages = []

    for i in range(total_chunks):
        html = f"""
        <html>
        <!-- Generated by graphic-novelator: https://github.com/SpaceFozzy/graphic-novelator -->
        <head>
            <style>
                body {{
                    background-color: black;
                    color: white;
                    font-size: 48px;
                    font-family: 'Arial', sans-serif;
                    margin: 0;
                    padding: 0;
                }}
                img {{
                    display: block;
                    max-width: 100%;
                    margin: 0 auto;
                }}
                .content-container {{
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                }}
                .navigation {{
                    font-family: 'Bangers', sans-serif;
                    text-decoration: none;
                    color: white;
                    font-size: 72px;
                    padding: 10px;
                    display: block;
                    margin: 20px auto;
                    text-align: center;
                }}
                .back {{
                    text-align: left;
                }}
                .next {{
                    text-align: right;
                }}
                @media (min-width: 1024px) {{
                    body {{ font-size: 24px; }}
                    .navigation {{ font-size: 36px; }}
                }}
            </style>
            <link href="https://fonts.googleapis.com/css?family=Bangers&display=swap" rel="stylesheet">
        </head>
        <body>
        """

        chunks_per_page = 5
        limit = min(i + chunks_per_page, total_chunks)

        if i > 0:
            back_link = f"{i - chunks_per_page + 1}.html" if i > chunks_per_page else "1.html"
            html += f"<div class='content-container'><a href='{back_link}' class='navigation back'>Back</a></div>"

        for j in range(i, limit):
            html += f"<img src='../images/{j + 1}.png'><div class='content-container'><p>{chunks[j].text}</p></div>"

        if i < total_chunks - chunks_per_page:
            html += f"<div class='content-container'><a href='{i + chunks_per_page + 1}.html' class='navigation next'>Next</a></div>"

        html += "</body></html>"
        html_pages.append(html)

    return html_pages

class HtmlBuilder:
    def __init__(self, root_directory):
        self.root_directory = root_directory
        self.pages_directory = os.path.join(root_directory, "pages")

    def generate_html_pages(self, chunks):
        os.makedirs(self.pages_directory, exist_ok=True)
        html_pages = generate_chunks_html(chunks)
        for i, html in enumerate(html_pages):
            file_path = os.path.join(self.pages_directory, f"{i + 1}.html")
            with open(file_path, "w", encoding="utf-8") as file:
                file.write(html)
            print(f"HTML for chunk {i + 1} written to {file_path}")

    def generate_index_html(self, chunks):
        html = generate_index_html(len(chunks))
        file_path = os.path.join(self.root_directory, "index.html")
        with open(file_path, "w", encoding="utf-8") as file:
            file.write(html)
        print(f"HTML index written to {file_path}")

